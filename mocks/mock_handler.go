// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/muhammed.gultekin/GolandProjects/guestLedger/middleware/handlers.go

// Package mock_middleware is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHandleActions is a mock of HandleActions interface.
type MockHandleActions struct {
	ctrl     *gomock.Controller
	recorder *MockHandleActionsMockRecorder
}

// MockHandleActionsMockRecorder is the mock recorder for MockHandleActions.
type MockHandleActionsMockRecorder struct {
	mock *MockHandleActions
}

// NewMockHandleActions creates a new mock instance.
func NewMockHandleActions(ctrl *gomock.Controller) *MockHandleActions {
	mock := &MockHandleActions{ctrl: ctrl}
	mock.recorder = &MockHandleActionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandleActions) EXPECT() *MockHandleActionsMockRecorder {
	return m.recorder
}

// CreateGuestMessage mocks base method.
func (m *MockHandleActions) CreateGuestMessage(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateGuestMessage", w, r)
}

// CreateGuestMessage indicates an expected call of CreateGuestMessage.
func (mr *MockHandleActionsMockRecorder) CreateGuestMessage(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGuestMessage", reflect.TypeOf((*MockHandleActions)(nil).CreateGuestMessage), w, r)
}

// GetAllGuestMessages mocks base method.
func (m *MockHandleActions) GetAllGuestMessages(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAllGuestMessages", w, r)
}

// GetAllGuestMessages indicates an expected call of GetAllGuestMessages.
func (mr *MockHandleActionsMockRecorder) GetAllGuestMessages(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllGuestMessages", reflect.TypeOf((*MockHandleActions)(nil).GetAllGuestMessages), w, r)
}
